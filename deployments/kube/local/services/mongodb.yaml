# Copyright 2020 IBM. 

kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongodb-pv-volume
  labels:
    type: local
    app: mongodb
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/data"

---
  
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongodb-pvc-volume
  labels:
    app: mongodb
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: manual

---

apiVersion: v1
kind: Service
metadata:
  name: mongodb-svc
  labels:
    app: mongodb-enterprise
    tier: iot
spec:
  type: NodePort
  ports:
  - port:  27017
    targetPort: 27017
    nodePort: 32017
  selector:
   app: mongodb-enterprise
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-enterprise
  labels:
    app: mongodb-enterprise
    tier: iot
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mongodb-enterprise
  template:
    metadata:
      labels:
        app: mongodb-enterprise
        set: mongodb-enterprise
    spec:
      containers:
      - name: mongodb-enterprise
        image: sinny777/mongo-enterprise:4.2
        imagePullPolicy: "IfNotPresent"
        env:
        - name: PORT
          value: "27017"        
        ports:
        - containerPort: 27017
        securityContext:
          privileged: true 
        volumeMounts:
        - mountPath: /data/db
          name: hostpath-privileged
      securityContext: {}
      volumes:
        - name: hostpath-privileged
          persistentVolumeClaim:
            claimName: mongodb-pvc-volume
      restartPolicy: Always
